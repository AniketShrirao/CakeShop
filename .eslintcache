[{"/home/prdxn114/Makestories-test/test/src/index.js":"1","/home/prdxn114/Makestories-test/test/src/reportWebVitals.js":"2","/home/prdxn114/Makestories-test/test/src/App.js":"3","/home/prdxn114/Makestories-test/test/src/store/index.js":"4","/home/prdxn114/Makestories-test/test/src/page/index.jsx":"5","/home/prdxn114/Makestories-test/test/src/store/reducers.js":"6","/home/prdxn114/Makestories-test/test/src/page/container.jsx":"7","/home/prdxn114/Makestories-test/test/src/page/services/reducer.js":"8","/home/prdxn114/Makestories-test/test/src/page/services/types.js":"9","/home/prdxn114/Makestories-test/test/src/store/createReducersFromTypes.js":"10","/home/prdxn114/Makestories-test/test/src/page/services/index.js":"11","/home/prdxn114/Makestories-test/test/src/store/createReducer.js":"12","/home/prdxn114/Makestories-test/test/src/page/services/actions.js":"13","/home/prdxn114/Makestories-test/test/src/utils/FetchUtils.js":"14","/home/prdxn114/Makestories-test/test/src/history.js":"15","/home/prdxn114/Makestories-test/test/src/config/fire.js":"16","/home/prdxn114/Makestories-test/test/src/utils/handleToast.js":"17","/home/prdxn114/Makestories-test/test/src/commonComponent/toastComponent/index.jsx":"18"},{"size":548,"mtime":1610885027927,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1610860372376,"results":"21","hashOfConfig":"20"},{"size":595,"mtime":1610890570771,"results":"22","hashOfConfig":"20"},{"size":642,"mtime":1610861523368,"results":"23","hashOfConfig":"20"},{"size":10257,"mtime":1610892598435,"results":"24","hashOfConfig":"20"},{"size":262,"mtime":1610860766572,"results":"25","hashOfConfig":"20"},{"size":6761,"mtime":1610893467155,"results":"26","hashOfConfig":"20"},{"size":157,"mtime":1610860753960,"results":"27","hashOfConfig":"20"},{"size":164,"mtime":1610860753988,"results":"28","hashOfConfig":"20"},{"size":750,"mtime":1610860766452,"results":"29","hashOfConfig":"20"},{"size":1103,"mtime":1610860753924,"results":"30","hashOfConfig":"20"},{"size":546,"mtime":1610860766420,"results":"31","hashOfConfig":"20"},{"size":629,"mtime":1610860753924,"results":"32","hashOfConfig":"20"},{"size":6074,"mtime":1610860776256,"results":"33","hashOfConfig":"20"},{"size":96,"mtime":1610861836272,"results":"34","hashOfConfig":"20"},{"size":513,"mtime":1610890541507,"results":"35","hashOfConfig":"20"},{"size":2147,"mtime":1610885502883,"results":"36","hashOfConfig":"20"},{"size":698,"mtime":1610885314403,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1itlniv",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/home/prdxn114/Makestories-test/test/src/index.js",[],"/home/prdxn114/Makestories-test/test/src/reportWebVitals.js",[],["78","79"],"/home/prdxn114/Makestories-test/test/src/App.js",[],"/home/prdxn114/Makestories-test/test/src/store/index.js",[],"/home/prdxn114/Makestories-test/test/src/page/index.jsx",[],"/home/prdxn114/Makestories-test/test/src/store/reducers.js",[],"/home/prdxn114/Makestories-test/test/src/page/container.jsx",["80","81","82","83"],"import React, { Component } from \"react\";\nimport { getConferenceList } from \"./services\";\nimport { each, filter, size, map } from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { fire, storage } from \"../config/fire\";\nimport ToastUtils from \"../utils/handleToast\";\n\nconst mapStateToProps = state => {\n  const { LOADING_CONFERENCE, SUCCESS_CONFERENCE, ERROR_CONFERENCE } = state;\n\n  return {\n    ...LOADING_CONFERENCE,\n    ...SUCCESS_CONFERENCE,\n    ...ERROR_CONFERENCE\n  };\n};\n\nconst mapDispatchToProps = {\n  getConferenceList\n};\n\nconst Container = Main =>\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(\n    class Presentation extends Component {\n      state = {\n        loginEmail: \"\",\n        loginPassword: \"\",\n        signupEmail: \"\",\n        signupPassword: \"\",\n        signupFullName: \"\",\n        signupMobileNumber: \"\",\n        signupAddress: \"\",\n        signupAge: \"\",\n        signupProfilePicture: \"\",\n        typeOfForm: \"signin\"\n      };\n\n      componentDidMount() {}\n\n      chnageFormType = type => {\n        this.setState({\n          typeOfForm: type\n        });\n      };\n\n      handleInputChange = (e, type = \"text\") => {\n        type === \"text\"\n          ? this.setState({\n              [e.target.name]: e.target.value\n            })\n          : type === \"file\" &&\n            this.setState({\n              [e.target.name]: e.target.files[0]\n            });\n      };\n\n      _fetchConferenceList = async () => {\n        const responce = await this.props.getConferenceList();\n        if (responce.status === 200) {\n          const list = [...responce.data.free, ...responce.data.paid];\n          await this.setState({\n            conferenceDataList: [...list]\n          });\n        } else {\n          await this.setState({\n            conferenceDataList: []\n          });\n        }\n      };\n\n      resetForm = () => {\n        let profilePictureRef = document.querySelector(\n          \"#signup-profilePicture\"\n        );\n\n        profilePictureRef && (profilePictureRef.value = \"\");\n\n        this.setState({\n          loginEmail: \"\",\n          loginPassword: \"\",\n          signupEmail: \"\",\n          signupPassword: \"\",\n          signupFullName: \"\",\n          signupMobileNumber: \"\",\n          signupAddress: \"\",\n          signupAge: \"\",\n          signupProfilePicture: \"\"\n        });\n      };\n\n      signInUser = () => {\n        const { loginEmail, loginPassword } = this.state;\n\n        if (loginEmail && loginPassword) {\n          fire\n            .auth()\n            .signInWithEmailAndPassword(loginEmail, loginPassword)\n            .then(() => {\n              const uid = fire.auth().currentUser.uid;\n\n              fire\n                .database()\n                .ref(`Users/${uid}`)\n                .once(\"value\")\n                .then(snapshot => {\n                  ToastUtils.handleToast({\n                    operation: \"success\",\n                    message: `Welcome Home ${\n                      snapshot.val() ? snapshot.val().fullName : \"User\"\n                    }!`\n                  });\n\n                  this.resetForm();\n                })\n                .catch(error => {\n                  ToastUtils.handleToast({\n                    operation: \"success\",\n                    message: \"Welcome Home User!\"\n                  });\n\n                  this.resetForm();\n                });\n            })\n            .catch(error => {\n              ToastUtils.handleToast({\n                operation: \"error\",\n                message: error.message\n              });\n            });\n        } else {\n          ToastUtils.handleToast({\n            operation: \"error\",\n            message: \"Please fill all the fields properly then try to login.\"\n          });\n        }\n      };\n\n      signUpUser = () => {\n        const {\n          signupEmail,\n          signupPassword,\n          signupFullName,\n          signupMobileNumber,\n          signupAddress,\n          signupAge,\n          signupProfilePicture\n        } = this.state;\n\n        if (\n          signupEmail &&\n          signupPassword &&\n          signupFullName &&\n          signupMobileNumber &&\n          signupAddress &&\n          signupAge &&\n          signupProfilePicture\n        ) {\n          fire\n            .auth()\n            .createUserWithEmailAndPassword(signupEmail, signupPassword)\n            .then(user => {\n              const uid = fire.auth().currentUser.uid;\n\n              fire\n                .database()\n                .ref(`Users/${uid}`)\n                .set({\n                  emailId: signupEmail,\n                  fullName: signupFullName,\n                  mobileNumber: signupMobileNumber,\n                  address: signupAddress,\n                  age: signupAge,\n                  profilePicture: \"\"\n                });\n\n              const uploadImageTask = storage\n                .ref(`Images/${uid}`)\n                .put(signupProfilePicture);\n\n              uploadImageTask.on(\n                \"state_changed\",\n                snapshot => {},\n                error => {\n                  ToastUtils.handleToast({\n                    operation: \"error\",\n                    message: error.message\n                  });\n\n                  ToastUtils.handleToast({\n                    operation: \"success\",\n                    message: `${signupFullName} register successfully.`\n                  });\n\n                  this.resetForm();\n                },\n                () => {\n                  storage\n                    .ref(\"Images\")\n                    .child(uid)\n                    .getDownloadURL()\n                    .then(url => {\n                      fire\n                        .database()\n                        .ref(`Users/${uid}`)\n                        .update({\n                          profilePicture: url\n                        });\n                    });\n\n                  ToastUtils.handleToast({\n                    operation: \"success\",\n                    message: `${signupFullName} register successfully.`\n                  });\n\n                  this.resetForm();\n                }\n              );\n            })\n            .catch(error => {\n              ToastUtils.handleToast({\n                operation: \"error\",\n                message: error.message\n              });\n            });\n        } else {\n          ToastUtils.handleToast({\n            operation: \"error\",\n            message: \"Please fill all the fields properly.\"\n          });\n        }\n      };\n\n      render() {\n        const $this = this;\n\n        /** Merge States and Methods */\n        const stateMethodProps = {\n          ...$this,\n          ...$this.state,\n          ...$this.props\n        };\n        return <Main {...stateMethodProps} />;\n      }\n    }\n  );\n\nexport default Container;\n","/home/prdxn114/Makestories-test/test/src/page/services/reducer.js",[],"/home/prdxn114/Makestories-test/test/src/page/services/types.js",[],"/home/prdxn114/Makestories-test/test/src/store/createReducersFromTypes.js",["84"],"/**\n * `createReducer` to dynamically create a reducer with proper payload\n */\nimport createReducer from \"./createReducer\";\n\n/**\n * Util to create a list of reducers based on constants types defined and passed\n *\n * @export as default\n * @param {Object} types - List of constant types used for reducers to combine and map\n * @returns\n */\nexport default function (types, initialState = {}) {\n  const reducerList = {};\n  const typeKeys = Object.keys(types);\n  typeKeys.forEach(key => {\n    const reducer = createReducer(initialState[key] || {})({\n      [types[key]]: (state, action) => {\n        return {\n          ...state,\n          ...action.payload\n        };\n      }\n    });\n    reducerList[[types[key]]] = reducer;\n  });\n\n  return reducerList;\n}\n","/home/prdxn114/Makestories-test/test/src/page/services/index.js",[],"/home/prdxn114/Makestories-test/test/src/store/createReducer.js",[],"/home/prdxn114/Makestories-test/test/src/page/services/actions.js",[],"/home/prdxn114/Makestories-test/test/src/utils/FetchUtils.js",["85"],"import axios from \"axios\";\nimport history from \"../history\";\nimport { get } from \"lodash\";\n\n//default timeout for API requests\naxios.defaults.timeout = 300000;\n\nconst TIMEOUT_MESSAGE = {\n  message: `Something’s wrong. we can’t communicate with the servers right now. we’ll try again. if this persists, please contact support.`\n};\n\n/**  Convert response to FE Format to handle changes if done in API response */\nconst handleReponseConvert = ({ response, error }) => {\n  const responseData = (response && response.data) || null;\n  const errorResponse = (error && get(error, \"response.data\")) || null;\n  let formattedResponse = {};\n\n  if (response && response.status) {\n    let statusCodeRange =\n      (response.status >= 200 && response.status <= 299) ||\n      response.status === 304;\n    if ((responseData && responseData.success) || statusCodeRange) {\n      formattedResponse = {\n        success: true,\n        status: 200,\n        ...responseData,\n        data: get(responseData, \"data\") || response || null\n      };\n    } else {\n      formattedResponse = {\n        success: false,\n        status: responseData.error.code,\n        data: get(error, \"response.data.error\") || TIMEOUT_MESSAGE\n      };\n    }\n  } else if (errorResponse) {\n    formattedResponse = {\n      success: false,\n      status: 404,\n      data: get(error, `response.data.error`) || TIMEOUT_MESSAGE\n    };\n\n    if (get(error, \"response.status\") === 403) {\n      let errorMessage = get(errorResponse, \"error.message\");\n      //show No Permission to access route\n      // ToastUtils.handleToast({\n      //   operation: \"error\",\n      //   message: errorMessage || TIMEOUT_MESSAGE\n      // });\n\n      // Check if user has access to a route and if not redirect to dashboard\n      history.push(\"/home\");\n    } else if (get(error, \"response.status\") === 401) {\n      //redirect logout if unauthorised or token is expired\n      history.push(\"/logout\");\n    }\n  } else {\n    formattedResponse = {\n      success: false,\n      status: 404,\n      data: TIMEOUT_MESSAGE\n    };\n  }\n\n  return formattedResponse;\n};\n\n/**  API Calling methods integrated with axios */\n\nclass FetchUtils {\n  constructor() {\n    this.baseUrl = `${process.env.REACT_APP_BASE_URL}`;\n  }\n\n  // set headers with authentication token\n  setHeaders(headersValue = {}, responseType = {}) {\n    const accessToken = localStorage.getItem(\"token\");\n\n    const config = {\n      ...responseType,\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        ...headersValue\n      }\n    };\n\n    return (accessToken && config) || \"\";\n  }\n\n  postData = async (url, body, log) => {\n    try {\n      const headers = this.setHeaders();\n      const apiUrl = this.baseUrl + url;\n      const response = await axios.post(apiUrl, body, headers);\n      return handleReponseConvert({\n        response\n      });\n    } catch (error) {\n      console.log(\"error ^^^^^^^\", error);\n      // logError({\n      //   error,\n      //   extraData: error.response\n      // });\n      return handleReponseConvert({\n        error\n      });\n    }\n  };\n\n  putData = async (url, body, log) => {\n    try {\n      const headers = this.setHeaders();\n      const apiUrl = this.baseUrl + url;\n      const response = await axios.put(apiUrl, body, headers);\n\n      return handleReponseConvert({\n        response\n      });\n    } catch (error) {\n      console.log(\"error ^^^^^^^\", error);\n      // logError({\n      //   error,\n      //   extraData: error.response\n      // });\n      return handleReponseConvert({\n        error\n      });\n    }\n  };\n\n  patchData = async (url, body, log) => {\n    try {\n      const headers = this.setHeaders();\n      const apiUrl = this.baseUrl + url;\n      const response = await axios.patch(apiUrl, body, headers);\n      return handleReponseConvert({\n        response\n      });\n    } catch (error) {\n      console.log(\"error ^^^^^^^\", error);\n      // logError({\n      //   error,\n      //   extraData: error.response\n      // });\n      return handleReponseConvert({\n        error\n      });\n    }\n  };\n\n  deleteData = async (url, log) => {\n    try {\n      const headers = this.setHeaders();\n      const apiUrl = this.baseUrl + url;\n      const response = await axios.delete(apiUrl, headers);\n      return handleReponseConvert({\n        response\n      });\n    } catch (error) {\n      console.log(\"error ^^^^^^^\", error);\n      // logError({\n      //   error,\n      //   extraData: error.response\n      // });\n      return handleReponseConvert({\n        error\n      });\n    }\n  };\n\n  getData = async (url, log) => {\n    const apiUrl = url;\n    try {\n      const headers = this.setHeaders();\n\n      const response = await axios.get(apiUrl, headers);\n      return handleReponseConvert({\n        response\n      });\n    } catch (error) {\n      console.log(\"error ^^^^^^^\", error);\n      return handleReponseConvert({\n        error\n      });\n    }\n  };\n\n  getDataWithHeader = async (\n    url,\n    log,\n    customHeader = {},\n    responseType,\n    isAttachBaseurl = true\n  ) => {\n    const apiUrl = isAttachBaseurl ? this.baseUrl + url : url;\n    try {\n      const headers = this.setHeaders(customHeader, responseType);\n\n      const response = await axios.get(apiUrl, {\n        data: {},\n        ...headers\n      });\n\n      return handleReponseConvert({\n        response\n      });\n    } catch (error) {\n      console.log(\"error ^^^^^^^\", error);\n      // logError({\n      //   error,\n      //   extraData: error.response\n      // });\n      return handleReponseConvert({\n        error\n      });\n    }\n  };\n\n  // aws request utils\n  awsPutData = async (apiUrl, body, headers, log) => {\n    try {\n      let config = {\n        headers: headers,\n        timeout: 0\n      };\n      const response = await axios.put(apiUrl, body, config);\n      return handleReponseConvert({\n        response\n      });\n    } catch (error) {\n      console.log(\"error ^^^^^^^\", error);\n      // logError({\n      //   error,\n      //   extraData: error.response\n      // });\n      return handleReponseConvert({\n        error\n      });\n    }\n  };\n}\n\nexport default new FetchUtils();\n","/home/prdxn114/Makestories-test/test/src/history.js",[],"/home/prdxn114/Makestories-test/test/src/config/fire.js",[],"/home/prdxn114/Makestories-test/test/src/utils/handleToast.js",[],"/home/prdxn114/Makestories-test/test/src/commonComponent/toastComponent/index.jsx",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":3,"column":10,"nodeType":"92","messageId":"93","endLine":3,"endColumn":14},{"ruleId":"90","severity":1,"message":"94","line":3,"column":16,"nodeType":"92","messageId":"93","endLine":3,"endColumn":22},{"ruleId":"90","severity":1,"message":"95","line":3,"column":24,"nodeType":"92","messageId":"93","endLine":3,"endColumn":28},{"ruleId":"90","severity":1,"message":"96","line":3,"column":30,"nodeType":"92","messageId":"93","endLine":3,"endColumn":33},{"ruleId":"97","severity":1,"message":"98","line":13,"column":1,"nodeType":"99","endLine":29,"endColumn":2},{"ruleId":"90","severity":1,"message":"100","line":44,"column":11,"nodeType":"92","messageId":"93","endLine":44,"endColumn":23},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'each' is defined but never used.","Identifier","unusedVar","'filter' is defined but never used.","'size' is defined but never used.","'map' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'errorMessage' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]